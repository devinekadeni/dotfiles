name: Tag Generation
run-name: Generate tag for ${{ inputs.environment }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment (staging or production)"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production

jobs:
  generate-tag:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Ensure all branches and tags are fetched

    - name: Set up Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Get today's date
      id: date
      run: |
        echo "DAY=$(date +'%d')" >> $GITHUB_ENV
        echo "MONTH=$(date +'%m')" >> $GITHUB_ENV
        echo "YEAR=$(date +'%y')" >> $GITHUB_ENV

    - name: Map environment to branch and identifier
      id: map_env
      run: |
        if [ "${{ github.event.inputs.environment }}" = "staging" ]; then
          echo "BRANCH=staging" >> $GITHUB_ENV
          echo "IDENTIFIER=sg" >> $GITHUB_ENV
        elif [ "${{ github.event.inputs.environment }}" = "production" ]; then
          echo "BRANCH=main" >> $GITHUB_ENV
          echo "IDENTIFIER=prd" >> $GITHUB_ENV
        fi

    - name: Checkout the correct branch
      run: |
        git checkout ${{ env.BRANCH }}

    - name: Get current tags
      id: get_tags
      run: |
        TAGS=$(git tag --list "v.${{ env.IDENTIFIER }}.${{ env.DAY }}.${{ env.MONTH }}.${{ env.YEAR }}*")
        echo "TAGS=$TAGS" >> $GITHUB_ENV
        echo "TAGS=${TAGS}"

    - name: Determine tag name
      id: generate_tag
      run: |
        IDENTIFIER=${{ env.IDENTIFIER }}
        PREFIX="v.$IDENTIFIER.${{ env.DAY }}.${{ env.MONTH }}.${{ env.YEAR }}"
        if [ "$IDENTIFIER" = "sg" ]; then
          LATEST_INDEX=$(git tag -l "$PREFIX.*" | sed "s/^$PREFIX.//" | sort -nr | head -n 1 || echo -1)
          NEW_INDEX=$((LATEST_INDEX + 1))
          echo "NEW_TAG=${PREFIX}.${NEW_INDEX}" >> $GITHUB_ENV
        else
          echo "NEW_TAG=${PREFIX}" >> $GITHUB_ENV
        fi

    - name: Create new tag
      run: |
        NEW_TAG=${{ env.NEW_TAG }}
        git tag $NEW_TAG
        git push origin $NEW_TAG --no-verify

    - name: Output new tag
      run: |
        echo "New tag created: ${{ env.NEW_TAG }}"